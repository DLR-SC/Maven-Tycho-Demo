language: java

jdk:
- oraclejdk8
 
cache:
  directories:
  - $HOME/.m2

addons:
  # -----------------------------------------------------------
  # Make the sourceforge hosts known, thus ssh connections will
  # not ask to accept the finger print of the server
  # -----------------------------------------------------------
  ssh_known_hosts: frs.sourceforge.net
  # ---------------------------------------------------------------
  # Now use APT to install metacity, which is a window manager also 
  # needed for the SWTBOT UI tests
  # ---------------------------------------------------------------
  apt:
    packages:
    - metacity

install:
- true

stages:
# ------------------------------------
# Just one stage, multiple stages 
# with maven overcomplicate the things
# ------------------------------------
- name: clean-install

env:
  global:
  # -------------------------------
  # set the display for UI testing
  # -------------------------------
  - DISPLAY=:99.0
  # ---------------------------------------------
  # API Token for access to github
  # ---------------------------------------------
  - secure: SNRF9Ys0OTI6zoFn88N8gxsadU7Ifu+G7B5kJfBmtRnVXoubUmpbve+sBgmk9OuHcpcmUnxvs2sOopjBOQBjmFMF7pZ699e4z6KLyhZTJG4wqiYkeTAt5uUixSaZ3BE0C07qC3rA/u4OD1GlBEEDGhUvDzddbgmUotvoUUi3+BCwyUBTAw64oR4z5wJADWX6eGqvLZ4oEnpz95A3OuNxepStIVDPZE7eACl8nwqztKBRkS3xmV6kKCB2Hzclq4Bk0DPyLDPvomnTaswhssT/NxuV8c6VUH72cjPJWLnMCupkV2Gye7v7XomdfDWTZJv+mZfoWY8eZMn/+zWwbwvKVi2DuTMbjWfwNPyFYI12ZfIRW613S2TITYoLOedo6V4Sh2B8pMJZeeSosAmje9pOdQYTysRz9imTraWd7zEYsQEcUCwCvJEtLHDFOJhXZT4OZ3hOyEv2FSI831/UJRlXRxwQJCOsPXO7sLNy3qY3vHE8P7IJjy8F3Mzx7IzX21B1exquE+PnI2FW3AEMUjnySCm28QOMXHrsb5Qi4CoNz3RaRevQsjo6wVNr/Idgh0CEMvDLzbtilFfcwnfl3Fa2phcN+TT3e+u6UNTuZNHhpXl/+gfnq61VhlZNEE6q2U6g6Bk+YLhjCFEfY4fIcEd/LIWSJcJ0i9SOJ0VJL5VKw+I=

before_script:
  # --------------------------------------------------
  # Start the XVFB Service for ui testing as suggested
  # by the travis documentation
  # --------------------------------------------------
  - sh -e /etc/init.d/xvfb start
  # -----------------------------------
  # Startup the metacity window manager
  # -----------------------------------
  - metacity --sm-disable --replace 2> metacity.err &

jobs:
  include:
    # -----------------------------------------------------------
    # Build job for general feature builds that do not deploy 
    # any artifacts nor create releases and tags, this is
    # applicable for master branches as well, they should only 
    # deploy when tagged.
    #------------------------------------------------------------
    - stage: clean-install
      if: branch NOT IN (integration, development, integration_snapshot, development_snapshot) AND NOT (tag =~ /^Release/)
      name: Clean Install Feature Build
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean install -P development,deployUnsecured -B -V | tee maven.log
      - echo "Check for warnings:"
      - (grep -n "\[WARNING\]" maven.log || exit 0 && exit 1;)
      - echo "Check for failed test cases:"
      - (grep -n "<<< FAILURE!" maven.log || exit 0 && exit 1;)
    # -----------------------------------------------------------
    # Deploy Jobs for unsecured Development.
    # Development job only. Feature jobs are not deployed.
    #------------------------------------------------------------
    - stage: clean-install
      if: branch = development
      name: Clean Install Deploy Development
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean install -P development,deployUnsecured -B -V | tee maven.log
      - echo "Check for warnings:"
      - (grep -n "\[WARNING\]" maven.log || exit 0 && exit 1;)
      - echo "Check for failed test cases:"
      - (grep -n "<<< FAILURE!" maven.log || exit 0 && exit 1;)
      before_deploy:
        # ----------------------------------------
        # Decrypt the key for accessign the 
        # deployment store and add it to ssh-agent
        # ----------------------------------------
        - openssl aes-256-cbc -K $encrypted_eeacdccef9d1_key -iv $encrypted_eeacdccef9d1_iv -in id_ed25519.enc -out /tmp/id_ed25519 -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/id_ed25519
        - ssh-add /tmp/id_ed25519
        # -----------------------------------------------------------
        # Update the development tag beforehand
        # And send it back to the origin, otherwise travis will 
        # apparently perform a git fetch before, and overwrite the
        # moved tag back to the previous state.
        #------------------------------------------------------------
        - git tag -f development_snapshot
        - git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f github-mtd development_snapshot
        - git remote remove github-mtd
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the newly created tag.
        # release is attached to the tag on the current commit.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file:
        - deploy/unsecured/p2/**/zip/*_p2.zip
        - deploy/unsecured/bin/**/*.zip
        - deploy/unsecured/bin/**/*.tar.gz
        skip_cleanup: true
        name: Maven Tycho Demo Development Build
        body: Development build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This release is subject to constant change.
        prerelease: true
        overwrite: true
        target_commitish: $TRAVIS_COMMIT
        on:
          repo: DLR-SC/Maven-Tycho-Demo
          branch: development
      # ---------------------------------------------
      # push build to sourceforge repo for deployment
      # ---------------------------------------------    
      - provider: script
        skip_cleanup: true
        script: # 
        - rsync -e ssh -avP --delete $TRAVIS_BUILD_DIR/deploy/unsecured/p2/DLRMavenTychoDemo/development/  philmfischer@frs.sourceforge.net:/home/frs/project/maven-tycho-demo/development/
        on:
          repo: DLR-SC/Maven-Tycho-Demo
          branch: development
    # -----------------------------------------------------------
    # Deploy Jobs for unsecured Integration.
    #------------------------------------------------------------
    - stage: clean-install
      if: branch = integration
      name: Clean Install Deploy Integration
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean install -P integration,deployUnsecured -B -V | tee maven.log
      - echo "Check for warnings:"
      - (grep -n "\[WARNING\]" maven.log || exit 0 && exit 1;)
      - echo "Check for failed test cases:"
      - (grep -n "<<< FAILURE!" maven.log || exit 0 && exit 1;)
      before_deploy:
        # ----------------------------------------
        # Decrypt the key for accessign the 
        # deployment store and add it to ssh-agent
        # ----------------------------------------
        - openssl aes-256-cbc -K $encrypted_eeacdccef9d1_key -iv $encrypted_eeacdccef9d1_iv -in id_ed25519.enc -out /tmp/id_ed25519 -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/id_ed25519
        - ssh-add /tmp/id_ed25519
        # -----------------------------------------------------------
        # Update the development tag beforehand
        # And send it back to the origin, otherwise travis will 
        # apparently perform a git fetch before, and overwrite the
        # moved tag back to the previous state.
        #------------------------------------------------------------
        - git tag -f integration_snapshot
        - git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f github-mtd integration_snapshot
        - git remote remove github-mtd
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the newly created tag.
        # release is attached to the tag on the current commit.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file: 
        - deploy/unsecured/p2/**/zip/*_p2.zip
        - deploy/unsecured/bin/**/*.zip
        - deploy/unsecured/bin/**/*.tar.gz
        skip_cleanup: true
        name: Maven Tycho Demo Integration Build
        body: Integration build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This release is subject to constant change.
        prerelease: true
        overwrite: true
        target_commitish: $TRAVIS_COMMIT
        on:
          repo: DLR-SC/Maven-Tycho-Demo
          branch: integration
      # ---------------------------------------------
      # push build to sourceforge repo for deployment
      # ---------------------------------------------    
      - provider: script
        skip_cleanup: true
        script: # 
        - rsync -e ssh -avP $TRAVIS_BUILD_DIR/deploy/unsecured/p2/DLRMavenTychoDemo/integration/  philmfischer@frs.sourceforge.net:/home/frs/project/maven-tycho-demo/integration/
        on:
          repo: DLR-SC/Maven-Tycho-Demo
          branch: integration
    # -----------------------------------------------------------
    # Deploy Jobs for secured Releases.
    #------------------------------------------------------------
    - stage: clean-install
      if: tag =~ /^Release/
      name: Clean Install Deploy Release
      script:
      # -------------------------------------------------------
      # call the maven build and store the output in a log file
      # use this log file to analyze it for compiler warnings
      # -------------------------------------------------------
      - mvn clean install -P release,deployBackuped -B -V | tee maven.log
      - echo "Check for warnings:"
      - (grep -n "\[WARNING\]" maven.log || exit 0 && exit 1;)
      - echo "Check for failed test cases:"
      - (grep -n "<<< FAILURE!" maven.log || exit 0 && exit 1;)
      before_deploy:
        # ----------------------------------------
        # Decrypt the key for accessign the 
        # deployment store and add it to ssh-agent
        # ----------------------------------------
        - openssl aes-256-cbc -K $encrypted_eeacdccef9d1_key -iv $encrypted_eeacdccef9d1_iv -in id_ed25519.enc -out /tmp/id_ed25519 -d
        - eval "$(ssh-agent -s)"
        - chmod 600 /tmp/id_ed25519
        - ssh-add /tmp/id_ed25519
      deploy:
        # -----------------------------------------------------------
        # Now attach the release to the Release Tag.
        # -----------------------------------------------------------
      - provider: releases
        api_key: $GITHUB_API_TOKEN
        file_glob: true
        file: 
        - deploy/secured/p2/**/zip/*_p2.zip
        - deploy/secured/bin/**/*.zip
        - deploy/secured/bin/**/*.tar.gz
        skip_cleanup: true
        name: Maven Tycho Demo Release Build
        body: Release build on latest commit by Travis CI - $TRAVIS_BRANCH ($TRAVIS_COMMIT) - $(date +'%F %T %Z'). This is a stable release.
        prerelease: true
        on:
          repo: DLR-SC/Maven-Tycho-Demo
          tags: true
      # ---------------------------------------------
      # push build to sourceforge repo for deployment
      # ---------------------------------------------    
      - provider: script
        skip_cleanup: true
        script: # 
        - rsync -e ssh -avP $TRAVIS_BUILD_DIR/deploy/secured/p2/DLRMavenTychoDemo/release/  philmfischer@frs.sourceforge.net:/home/frs/project/maven-tycho-demo/release/
        on:
          repo: DLR-SC/Maven-Tycho-Demo
          tags: true
          
          
          